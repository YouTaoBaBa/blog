<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git使用</title>
      <link href="/2020/09/11/git-shi-yong/"/>
      <url>/2020/09/11/git-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Git基本使用"><a href="#Git基本使用" class="headerlink" title="Git基本使用"></a>Git基本使用</h1><h2 id="必要配置"><a href="#必要配置" class="headerlink" title="必要配置"></a>必要配置</h2><h3 id="查看当前项目下的配置"><a href="#查看当前项目下的配置" class="headerlink" title="查看当前项目下的配置"></a>查看当前项目下的配置</h3><pre class=" language-git"><code class="language-git">git config -l  #查看所有配置git config --system -l #查看系统配置git config --global --list #查看用户配置</code></pre><h3 id="配置用户变量"><a href="#配置用户变量" class="headerlink" title="配置用户变量"></a>配置用户变量</h3><pre class=" language-git"><code class="language-git">git config --global user.name <span class="token string">"YouTaoBaBa"</span> #配置用户名git config --global user.email 674508620@qq.com #配置用户邮箱</code></pre><h2 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h2><p>用户目录下找.ssh文件夹里找-d_rsa.pub，如果没有，则使用以下命令生成公钥，然后将公钥复制到远程仓库管理(github,gitee,coding等)的ssh配置里</p><pre class=" language-git"><code class="language-git">ssh-keygen -t rsa</code></pre><h2 id="git基本操作"><a href="#git基本操作" class="headerlink" title="git基本操作"></a>git基本操作</h2><h3 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a>本地仓库搭建</h3><pre class=" language-git"><code class="language-git">git init #本地初始化git clone [url](https或者ssh) #复制远程仓库</code></pre><h3 id="添加到暂存区"><a href="#添加到暂存区" class="headerlink" title="添加到暂存区"></a>添加到暂存区</h3><pre class=" language-git"><code class="language-git">git add . #添加所有文件到暂存区</code></pre><h3 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h3><pre class=" language-git"><code class="language-git">git status</code></pre><h3 id="提交暂存区至本地仓库"><a href="#提交暂存区至本地仓库" class="headerlink" title="提交暂存区至本地仓库"></a>提交暂存区至本地仓库</h3><pre class=" language-git"><code class="language-git">git commit -m <span class="token string">"filename"</span></code></pre><h3 id="提交至远程仓库"><a href="#提交至远程仓库" class="headerlink" title="提交至远程仓库"></a>提交至远程仓库</h3><pre class=" language-git"><code class="language-git">git push (origin master)</code></pre><h3 id="同步远程仓库至本地仓库"><a href="#同步远程仓库至本地仓库" class="headerlink" title="同步远程仓库至本地仓库"></a>同步远程仓库至本地仓库</h3><pre><code>git pull</code></pre><h3 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h3><p>在主目录下建立 “.gitignore”文件，文件规则如下：</p><ol><li>忽略文件中的空行和井号开始的行会被忽略</li><li>可以使用linux通配符</li><li>名称最前面有!表示例外规则，不被忽略</li><li>名称前面德文路径分隔符(‘/‘)表示要忽略的文件在此目录下，而子目录的文件不忽略</li><li>如果名称的最后一个是路径分隔符(‘/‘)表示忽略的是此目录下该名称的子目录，而非文件(默认文件或目录都忽略)。</li></ol><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p>查看所有分支</p><pre class=" language-git"><code class="language-git">git branchgit branch -r #查看远程分支</code></pre><p>新建分支dev</p><pre class=" language-git"><code class="language-git">git branch devgit checkout -b dev #新建一个分支并切换到这个分支</code></pre><p>切换分支</p><pre class=" language-git"><code class="language-git">git checkout master</code></pre><p>删除分支dev</p><pre class=" language-git"><code class="language-git">git branch -d dev</code></pre><p>合并指定分支到当前分支</p><pre class=" language-git"><code class="language-git">git merge [branch]</code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建Hexo博客</title>
      <link href="/2020/09/10/cong-ling-kai-shi-da-jian-hexo-bo-ke/"/>
      <url>/2020/09/10/cong-ling-kai-shi-da-jian-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<blockquote><p>   准备工作:安装nodejs, 安装git, 配置github的SSH</p></blockquote><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><p>进入<a href="https://nodejs.org/en/">nodejs官网</a>下载稳定版本，一路点击next，安装完成后，打开cmd，输入命令<code>node -v</code>和<code>npm -v</code>，如果显示版本号，安装成功</p><p><img src="https://s1.ax1x.com/2020/09/10/wJYoXq.png" alt="wJYoXq.png"></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>进入<a href="https://git-scm.com/downloads">Git官网</a>下载对应的安装文件，下载完成之后，设置用户名和邮箱，再配置Github账户的SSH</p><p>使用<code>git config --global user.name &quot;username&quot;</code>设置用户名，注意username是自己的GitHub用户名，邮箱是GitHub邮箱</p><p><img src="https://s1.ax1x.com/2020/09/10/wJt4UO.png" alt="wJt4UO.png"></p><p>使用<code>git config --global user.email &quot;email&quot;</code>设置邮箱，注意eamil指的是自己的GitHub绑定的邮箱</p><p><img src="https://s1.ax1x.com/2020/09/10/wJtT8H.png" alt="wJtT8H.png"></p><h3 id="配置github的SSH"><a href="#配置github的SSH" class="headerlink" title="配置github的SSH"></a>配置github的SSH</h3><p>进入到家目录的<code>.ssh</code>文件夹，输入<code>ssh-keygen -t rsa -C &quot;eamil&quot;</code>，这里的email是自己的GitHub绑定的邮箱地址，连续三个回车。在当前用户目录下的.ssh文件夹下，产生了两个文件，一个是公钥文件，一个是私钥文件。</p><p><img src="https://s1.ax1x.com/2020/09/10/wJNBLt.png" alt="wJNBLt.png"></p><p>复制公钥文件的内容，到GitHub网站，在<code>Settings</code>页面左边的<code>SSH and GPG keys</code>部分，新建一个SSH keys，粘贴刚刚复制过来的内容</p><p><img src="https://s1.ax1x.com/2020/09/10/wJNgJg.png" alt="wJNgJg.png"></p><p>再到Git中，输入<code>ssh -T git@github.com</code>，如果出现<strong>Hi，username</strong>，那么表明本地成功连接了GitHub</p><p><a href="https://imgchr.com/i/wJN4Lq"><img src="https://s1.ax1x.com/2020/09/10/wJN4Lq.png" alt="wJN4Lq.png"></a></p><blockquote><p>  新建仓库存放博客内容，并且安装和美化Hexo</p></blockquote><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>新建一个项目， 名称为<code>账户名.github.io</code>，勾选<strong>Initialize this repository with a README</strong></p><p><img src="https://s1.ax1x.com/2020/09/10/wJUGXn.png" alt="wJUGXn.png"></p><p>点击项目的Settings,下拉到<strong>GitHub Pages</strong>部分，Source下拉框的选项如果是<code>None</code>，那么要改为<code>master branch</code>，点击<code>save</code>按钮保存，上方会显示一个网址，这个就是被部署到外网的网址，能够通过外网访问</p><p><img src="https://s1.ax1x.com/2020/09/10/wJUwhF.png" alt="wJUwhF.png"></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在本地创建一个文件夹，作为博客系统的根目录，进入到这个目录</p><p>输入<code>npm install hexo -g</code>，开始安装Hexo</p><p>输入<code>hexo -v</code>，检查hexo是否安装成功</p><p>输入<code>hexo init</code>，初始化该文件夹</p><p>输入<code>npm install</code>，安装所需要的组件</p><p>输入<code>hexo g</code>，g是generate的缩写</p><p>输入<code>hexo s</code>，s是start的缩写，表明开启服务器，此时浏览器打开该网址<code>localhost:4000</code></p><p>如果出现下图，那么Hexo就搭建成功了</p><p><img src="https://s1.ax1x.com/2020/09/10/wJULAf.png" alt="wJULAf.png"></p><p>目前只能本地访问到，下面配置外网访问</p><h3 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h3><p>配置deployment，在项目文件夹中，找到配置文件<strong>_config.yml</strong>，修改repo的值，增加<strong>branch</strong>的值为<strong>master</strong></p><p><img src="https://s1.ax1x.com/2020/09/10/wJaPH0.png" alt="wJaPH0.png"></p><p>repo的值是GitHub项目右下角，<strong>Use SSH</strong>的，以<strong>git</strong>结尾的一个链接， 默认是<strong>Use HTTPS</strong>，使用<strong>Use SSH</strong>选项就能看到以<strong>git</strong>结尾的链接。复制这个以<strong>git</strong>结尾的链接，粘贴到配置文件<strong>_config.yml</strong>，修改repo的值</p><p><img src="https://s1.ax1x.com/2020/09/10/wJakNT.png" alt="wJakNT.png"></p><p>cmd进入博客根目录，安装一个扩展，<code>npm install hexo-deployer-git --save</code></p><p>新建一片博客，在cmd进入根目录后，用<code>hexo new post &quot;文章名&quot;</code></p><p>输入命令<code>hexo g &amp;&amp; hexo d</code>，然后再输入Github Pages的网址就能够访问了</p><h3 id="美化主题"><a href="#美化主题" class="headerlink" title="美化主题"></a>美化主题</h3><p>默认的主题样式一般，选择更好看的主题matery</p><p>进入到<code>themes</code>文件夹</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><p>修改 <code>_config.yml</code> 的 <code>url</code> 的值为网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</p><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: categoriesdate: 2018-09-30 17:25:30type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---</code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-bash"><code class="language-bash">---title: tagsdate: 2018-09-30 18:23:38type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---</code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>prism_plugin:  mode: <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  theme: <span class="token string">'tomorrow'</span>  line_number: <span class="token boolean">false</span>    <span class="token comment" spellcheck="true"># default false</span>  custom_css:</code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-bash"><code class="language-bash">search:  path: search.xml  field: post</code></pre><h3 id="文章字数统计插件（可选的）"><a href="#文章字数统计插件（可选的）" class="headerlink" title="文章字数统计插件（可选的）"></a>文章字数统计插件（可选的）</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class=" language-bash"><code class="language-bash">wordCount:  enable: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  postWordCount: <span class="token boolean">true</span>  min2read: <span class="token boolean">true</span>  totalCount: <span class="token boolean">true</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> blog相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/09/10/hello-world/"/>
      <url>/2020/09/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> blog相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第一次配置完成Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2020/09/10/markdown-ji-ben-yu-fa/"/>
      <url>/2020/09/10/markdown-ji-ben-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown学习"><a href="#Markdown学习" class="headerlink" title="Markdown学习"></a>Markdown学习</h1><h2 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h2><h3 id="标题级数-’-’个数"><a href="#标题级数-’-’个数" class="headerlink" title="标题级数=’#’个数"></a>标题级数=’#’个数</h3><p>字体格式<br><strong>粗体</strong><br><em>斜体</em><br><del>废弃线</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>油桃牛逼</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://coding-pages-bucket-3473233-7944306-346-307103-1302308732.cos-website.ap-hongkong.myqcloud.com/medias/featureimages/12.jpg" alt="截图"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://coding-pages-bucket-3473233-7944306-346-307103-1302308732.cos-website.ap-hongkong.myqcloud.com/">跳转到油桃的博客首页</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>A</li><li>B</li><li>C</li></ol><ul><li>A</li><li>B</li><li>C</li></ul><table><thead><tr><th>名字</th><th>性别</th><th>生日</th></tr></thead><tbody><tr><td>张三</td><td>男</td><td>1997.7</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pdbpdb<span class="token punctuation">.</span>set_trace<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> blog相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog书写 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
